"""initial migration

Revision ID: e7b3b15851b4
Revises: 
Create Date: 2025-07-17 15:51:35.411674

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e7b3b15851b4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vlr_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vlr_id')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vlr_id', sa.Integer(), nullable=False),
    sa.Column('ign', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vlr_id')
    )
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vlr_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vlr_id')
    )
    op.create_table('core_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('core_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['core_id'], ['cores.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vlr_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['winner_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('vlr_id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vlr_id', sa.Integer(), nullable=False),
    sa.Column('coreteam1_id', sa.Integer(), nullable=False),
    sa.Column('coreteam2_id', sa.Integer(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.String(), nullable=False),
    sa.Column('match_stage', sa.String(), nullable=False),
    sa.Column('match_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['coreteam1_id'], ['core_teams.id'], ),
    sa.ForeignKeyConstraint(['coreteam2_id'], ['core_teams.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['core_teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vlr_id')
    )
    op.create_table('maps_played',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('map_number', sa.Integer(), nullable=False),
    sa.Column('map_name', sa.String(), nullable=False),
    sa.Column('team1_score', sa.Integer(), nullable=False),
    sa.Column('team2_score', sa.Integer(), nullable=False),
    sa.Column('winner_id', sa.Integer(), nullable=False),
    sa.Column('loser_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['loser_id'], ['core_teams.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['core_teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_map_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('map_played_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('agent', sa.String(), nullable=False),
    sa.Column('kills', sa.Integer(), nullable=False),
    sa.Column('deaths', sa.Integer(), nullable=False),
    sa.Column('acs', sa.Integer(), nullable=False),
    sa.Column('first_kills', sa.Integer(), nullable=False),
    sa.Column('first_deaths', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['map_played_id'], ['maps_played.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players_duels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('map_player_id', sa.Integer(), nullable=False),
    sa.Column('attacker_id', sa.Integer(), nullable=False),
    sa.Column('victim_id', sa.Integer(), nullable=False),
    sa.Column('kills', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attacker_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['map_player_id'], ['maps_played.id'], ),
    sa.ForeignKeyConstraint(['victim_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('players_duels')
    op.drop_table('player_map_statistics')
    op.drop_table('maps_played')
    op.drop_table('matches')
    op.drop_table('events')
    op.drop_table('core_teams')
    op.drop_table('teams')
    op.drop_table('players')
    op.drop_table('cores')
    # ### end Alembic commands ###
